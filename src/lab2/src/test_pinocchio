#!/usr/bin/env python3

import os
import numpy as np
import pinocchio as pin
from pinocchio.robot_wrapper import RobotWrapper


# urdf path
pwd = os.path.dirname(os.path.realpath(__file__))
ur5_urdf_file = os.path.join(pwd,'../../ur5_description/urdf/labs_ur5.urdf')

# load urdf
ur5_robot = RobotWrapper.BuildFromURDF(ur5_urdf_file)  
joint_id = ur5_robot.model.getFrameId('ee_link') 

# joint position and velocity
q =   np.array([np.pi, -np.pi/8,  -np.pi/6, 0.0, 0.0, 0.0])
dq =  np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) 

# compute jacobian
ur5_robot.computeJointJacobians(q)
J = ur5_robot.getFrameJacobian(joint_id, pin.ReferenceFrame.LOCAL_WORLD_ALIGNED)
print("\nJacobian:\n ", J)

# compute derivative in time of jacobian
pin.computeJointJacobiansTimeVariation( ur5_robot.model, ur5_robot.data, q, dq)
dJ = ur5_robot.getJointJacobianTimeVariation(joint_id, pin.ReferenceFrame.LOCAL_WORLD_ALIGNED)
print("\ndJacobian:\n ", dJ)
